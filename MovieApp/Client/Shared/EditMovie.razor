@page "/movies/edit/{MovieId:int}"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
<h3>Edit</h3>
@if (mv == null)
{
    <img src="https://media0.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif" alt="Loading" />
}
else
{
<EditForm Model="@movie" OnValidSubmit="@OnValidSubmit">
    <div class="form-group">
        <label for="Title">Title</label>
        <InputText id="Title" @bind-Value="@movie.Title" class="form-control" placeholder="Title"></InputText>
    </div>
    <div class="form-group">
        <label for="Summary">Summary</label>
        <InputText id="Summary" @bind-Value="@movie.Summary" placeholder="Summary" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="InTheaters">In Theaters</label>
        <InputCheckbox id="InTheaters" @bind-Value="@movie.InTheaters" class="form-control"></InputCheckbox>
    </div>
    <div class="form-group">
        <label for="Trailer">Trailer</label>
        <InputText id="Trailer" @bind-Value="@movie.Trailer" placeholder="Trailer" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="ReleaseDate">ReleaseDate</label>
        <InputDate id="ReleaseDate" @bind-Value="@movie.ReleaseDate" class="form-control"></InputDate>
    </div>
    <div class="form-group">
        <label for="Poster">Poster</label>
        <InputText id="Poster" @bind-Value="@movie.Poster" placeholder="Poster" class="form-control"></InputText>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>
}
    @code {
        [Parameter] public int MovieId { get; set; }
        public EditMovieDTO movie = new EditMovieDTO();
        public Movie mv;
        protected override async Task OnInitializedAsync()
        {
            var responseHTTP = await httpClient.GetAsync("https://localhost:44311/api/movies/details/" + MovieId);

            if (responseHTTP.IsSuccessStatusCode)
            {
                var responseString = await responseHTTP.Content.ReadAsStringAsync();
                mv = System.Text.Json.JsonSerializer.Deserialize<Movie>(responseString, new System.Text.Json.JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
            }
            movie.Title = mv.Title;
            movie.Summary = mv.Summary;
            movie.InTheaters = mv.InTheaters;
            movie.Trailer = mv.Trailer;
            movie.ReleaseDate = mv.ReleaseDate;
            movie.Poster = mv.Poster;
        }
        async Task OnValidSubmit()
        {

            var result = await httpClient.PutAsJsonAsync($"api/movies/edit/{MovieId}", movie);
            NavigationManager.NavigateTo("/movies");
        }
    }